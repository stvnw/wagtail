name: Wagtail CI

on:
  push:
    paths-ignore:
    - 'docs/**'
  pull_request:
    paths-ignore:
    - 'docs/**'


# Our test suite should cover:
# - all supported databases against current Python and Django
# - at least one test run for each older supported version of Python and Django
# - at least one test run for each supported Elasticsearch version
# - a test run against Django's git master and active stable branch (allowing failures)
# - test runs with USE_EMAIL_USER_MODEL=yes and DISABLE_TIMEZONE=yes

# Current configuration:
# - django 2.2, python 3.6, mysql
# - django 3.0, python 3.7, sqlite
# - django 3.1, python 3.8, postgres
# - django 3.1, python 3.9, mysql
# - django 3.1, python 3.9, sqlite
# - django 3.1, python 3.9, postgres, USE_EMAIL_USER_MODEL=yes
# - django 3.1, python 3.9, postgres, DISABLE_TIMEZONE=yes
# - django stable/3.2.x, python 3.9, postgres (allow failures)
# - django master, python 3.9, postgres (allow failures)
# - elasticsearch 5, django 2.2, python 3.6, sqlite
# - elasticsearch 6, django 3.0, python 3.7, postgres
# - elasticsearch 7, django 3.1, python 3.8, postgres
# - elasticsearch 7, django 3.1, python 3.9, sqlite, USE_EMAIL_USER_MODEL=yes

jobs:

  test-mysql:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            django: "Django>=2.2,<3.0"
          - python: 3.9
            django: "Django>=3.1,<3.2"

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: wagtail
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "mysqlclient>=1.4,<2"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
      - name: Test
        run: |
          ./runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.mysql
          DATABASE_HOST: "127.0.0.1"
          DATABASE_USER: root
